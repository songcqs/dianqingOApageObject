<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.dianqingoa.demo</groupId>
	<artifactId>dianqingOApageObject</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<!-- maven 运行测试name -->
	<name>dianqingOApageObject</name>
	<url>http://maven.apache.org</url>

	<!-- maven 参数配置，这里引用不同的testng.xml -->
	<properties>
		<!-- 文件拷贝时的编码 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- 让整个项目统一字符集编码 -->
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- 编译时的编码 -->
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
   	 	<generated-src>../src/main/java</generated-src>
	</properties>

	<!-- maven 引用依赖不同的jar -->
	<dependencies>
		<dependency>
			<groupId>junit</groupId>  <!-- 项目组织唯一标识 -->
			<artifactId>junit</artifactId>  <!-- 项目唯一标识 -->
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>

		<!-- 依赖testNg -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.14.2</version>
			<scope>test</scope>
		</dependency>

		<!-- 加入selenium做webUI测试,选用selenium2 -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>2.44.0</version>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-server</artifactId>
			<version>2.44.0</version>
		</dependency>

		<!-- 日志 -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

		<!-- 加入reportNG依赖，关联testNg,代替testNG测试报告 -->
		<dependency>
			<groupId>org.uncommons</groupId>
			<artifactId>reportng</artifactId>
			<version>1.1.4</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.testng</groupId>
					<artifactId>testng</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- 依赖Guice,guice提供了强大的注入方式。1.属性注入2.构造器注入3.set方式注入 -->
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>3.0</version>
			<scope>test</scope>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi 依赖poi -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.17</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/net.sourceforge.jexcelapi/jxl 依赖jxl -->
		<dependency>
			<groupId>net.sourceforge.jexcelapi</groupId>
			<artifactId>jxl</artifactId>
			<version>2.6.12</version>
		</dependency>

		<!-- ReportNG 报告优化使用 -->
		<!-- Velocity视图解析器 -->
		<dependency>
			<groupId>velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- testng-xslt 报告优化需引用jar -->
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>2.0.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.reporting</groupId>
			<artifactId>maven-reporting-api</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.reporting</groupId>
			<artifactId>maven-reporting-impl</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.saxon</groupId>
			<artifactId>saxon</artifactId>
			<version>8.7</version>
		</dependency>

	</dependencies>
	<build>
		<plugins>
			<!-- 设置xml、properties资源文件的编码格式 -->
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin> -->

			<!-- 编译插件： -->
			<plugin>
				<!-- 使用maven-compiler-plugin插件可以指定项目源码的jdk版本，编译后的jdk版本，以及编码 -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source><!-- 源代码编译版本 -->
					<target>1.8</target><!-- 目标平台编译版本 -->
					<encoding>UTF-8</encoding><!-- 字符集编码，解决"编码 GBK 的不可映射字符"问题 -->
				</configuration>
			</plugin>

			<!-- 添加插件 关联testNg.xml,surefire插件其实就是一个容器 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
				
					<!-- <skipTests>true</skipTests> -->
					<suiteXmlFiles>
					<!--此处testng.xml即为要运行的testng.xml文件 -->
					<suiteXmlFile>testng3.xml</suiteXmlFile>
					</suiteXmlFiles>
						
					<!-- 加入编码设置，否则生成的报告会中文乱码 -->
					<argLine>-Dfile.encoding=UTF-8</argLine>
				
					<properties>
						<property>
							<name>usedefaultlisteners</name>
                            <value>false</value>
                        </property>
                        <property>
                            <name>listener</name>
                            <value>org.uncommons.reportng.HTMLReporter, org.uncommons.reportng.JUnitXMLReporter</value>
                        </property> 
                            
					</properties>
					
					<!-- <workingDirectory>target/</workingDirectory> --><!-- 用这个会因找不到外部的配置文件而出错 -->
					 <outputDirectory>${basedir}/target/</outputDirectory>
					
				</configuration>
			</plugin>
			
			
			<!-- 构建项目站点报告插件 -->
    <plugin>     
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-site-plugin</artifactId>
      <version>3.0-beta-3</version>
      <configuration>
        <!-- 配置站点国际化 -->
        <locales>zh_CN</locales>
        <!-- 输出编码 -->
        <outputEncoding>GBK</outputEncoding>
      </configuration>
    </plugin>
    
    <!-- 项目API doc报告 -->
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-javadoc-plugin</artifactId>
      <version>2.7</version>
    </plugin>

    <!-- 单元测试报告html -->
    <plugin>      
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-report-plugin</artifactId>
      <version>2.12.2</version>
      <configuration>
        <showSuccess>false</showSuccess>
      </configuration>
    </plugin>
    
    <!-- 测试覆盖率的报告 -->
    <plugin>      
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>cobertura-maven-plugin</artifactId>
      <version>2.5.1</version>
      <configuration>
        <formats>
          <format>html</format>
          <format>xml</format>
        </formats>
      </configuration>
      <executions>
        <execution>
          <id>cobertura-report</id>
          <goals>
            <goal>cobertura</goal>
          </goals>
          <phase>test</phase>
        </execution>
      </executions>
    </plugin>
			
			<!-- 
			<plugin>
            <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>

                <executions>
                    <execution>
                        <id>ant-build</id>
                        绑定插件到代码生成阶段执行
                        <phase>site</phase>
                        <goals>
                        <goal>run</goal>
                        </goals>
                        <configuration>
                        <target>
                            
                            执行builx.xml脚本,
                            并向build.xml传递三个参数 sql2java-config,generated-src,driver-jar
                           
                            <ant antfile="build.xml" target="transform" inheritAll="false">
                            </ant>
                        </target>
                        </configuration>
                    </execution>
            </executions>
        </plugin> -->
		</plugins>
	</build>

</project>
